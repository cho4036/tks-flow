apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: tks-create-cluster-repo
  namespace: argo
spec:
  entrypoint: main
  arguments:
    parameters:
    - name: contract_id
      value: "contract_uuid"
    - name: cluster_id
      value: "cluster_uuid"
    - name: template_name
      value: "template-std"
    - name: test_template_name
      value: "aws-reference"

  templates:
  - name: createClusterRepo
    activeDeadlineSeconds: 300
    inputs:
      parameters:
      - name: cluster_info
    container:
      name: 'createClusterRepo'
      image: ghcr.io/sktelecom/ghcli-alpine:2.0.0
      imagePullPolicy: IfNotPresent
      command:
      - /bin/bash
      - -ecx
      - |
        echo $TOKEN | gh auth login --with-token

        gh repo create ${USERNAME}/${CLUSTER_ID} --public --confirm
        gh repo create ${USERNAME}/${CLUSTER_ID}-manifests --public --confirm

        git clone https://$(echo -n $TOKEN)@github.com/${USERNAME}/${CONTRACT_ID}.git

        # Get cluster-api infra provider in the template
        infra_provider_group="$(ls ${CONTRACT_ID}/$TEMPLATE_NAME | grep -v tks-cluster-common | grep tks-cluster)"
        INFRA_PROVIDER=${infra_provider_group#tks-cluster-}
        echo ${INFRA_PROVIDER} | tee /mnt/out/infra_provider.txt

        cp -r ${CONTRACT_ID}/${TEMPLATE_NAME} ${CLUSTER_ID}/${CLUSTER_ID}
        cp -r ${CONTRACT_ID}/_github ${CLUSTER_ID}/.github

        echo $CLUSTER_INFO

        ## Replace site-values with fetched params ##
        sed -i "s/clusterName:\ cluster.local/clusterName:\ $CLUSTER_ID/g" $CLUSTER_ID/$CLUSTER_ID/tks-cluster-common/site-values.yaml
        case $INFRA_PROVIDER in
          aws)
            ## Fetch cluster params from cluster_info file ##
            val_ssh_key=$(echo $CLUSTER_INFO | sed 's/.*\(ssh_key_name:\ \S*\).*/\1/' | cut -d ':' -f2 | xargs)
            echo "ssh_key_name: $val_ssh_key"
            val_region=$(echo $CLUSTER_INFO | sed 's/.*\(region:\ \S*\).*/\1/' | cut -d ':' -f2 | xargs)
            val_num_of_az=$(echo $CLUSTER_INFO | sed 's/.*\(num_of_az:\ \S*\).*/\1/' | cut -d ':' -f2 | xargs)
            val_machine_type=$(echo $CLUSTER_INFO | sed 's/.*\(machine_type:\ \S*\).*/\1/' | cut -d ':' -f2 | xargs)
            val_min_size=$(echo $CLUSTER_INFO | sed 's/.*\(min_size_per_az:\ \S*\).*/\1/' | cut -d ':' -f2 | xargs)
            val_max_size=$(echo $CLUSTER_INFO | sed 's/.*\(max_size_per_az:\ \S*\).*/\1/' | cut -d ':' -f2 | xargs)
            echo "max_size_per_az: $val_max_size"

            sed -i "s/clusterName:\ cluster.local/clusterName:\ $CLUSTER_ID/g" $CLUSTER_ID/$CLUSTER_ID/tks-cluster-aws/site-values.yaml
            sed -i "s/sshKeyName:\ CHANGEME/sshKeyName: $val_ssh_key/g" $CLUSTER_ID/$CLUSTER_ID/tks-cluster-aws/site-values.yaml
            sed -i "s/clusterRegion:\ CHANGEME/clusterRegion: $val_region/g" $CLUSTER_ID/$CLUSTER_ID/tks-cluster-aws/site-values.yaml
            sed -i "s/mdNumOfAz:\ CHANGEME/mdNumOfAz: $val_num_of_az/g" $CLUSTER_ID/$CLUSTER_ID/tks-cluster-aws/site-values.yaml
            sed -i "s/mdMinSizePerAz:\ CHANGEME/mdMinSizePerAz: $val_min_size/g" $CLUSTER_ID/$CLUSTER_ID/tks-cluster-aws/site-values.yaml
            sed -i "s/mdMaxSizePerAz:\ CHANGEME/mdMaxSizePerAz: $val_max_size/g" $CLUSTER_ID/$CLUSTER_ID/tks-cluster-aws/site-values.yaml
            sed -i "s/mdMachineType:\ CHANGEME/mdMachineType: $val_machine_type/g" $CLUSTER_ID/$CLUSTER_ID/tks-cluster-aws/site-values.yaml
            ;;

          byoh)
            sed -i "s/clusterName:\ cluster.local/clusterName:\ $CLUSTER_ID/g" $CLUSTER_ID/$CLUSTER_ID/tks-cluster-byoh/site-values.yaml
            echo "BYOH"
            ;;

          *)
            echo "Error: wrong infra provider"
            exit 1
            ;;
        esac

        echo "Contract ID: "${CONTRACT_ID} > ${CLUSTER_ID}/META
        echo "Template Name: "${TEMPLATE_NAME} >> ${CLUSTER_ID}/META

        git config --global user.email "taco_support@sk.com"
        git config --global user.name "SKTelecom TACO"

        cd ${CLUSTER_ID}
        git add .github
        git add *
        git commit -m "add new ${CLUSTER_ID} site"
        git branch -M main
        git remote set-url origin https://$(echo -n $TOKEN)@github.com/${USERNAME}/${CLUSTER_ID}
        git remote -v
        git push -u origin main
        cd ..

        cd ${CLUSTER_ID}-manifests
        touch README
        git add README
        git commit -m "add new ${CLUSTER_ID} site"
        git branch -M main
        git remote set-url origin https://$(echo -n $TOKEN)@github.com/${USERNAME}/${CLUSTER_ID}-manifests
        git remote -v
        git push -u origin main
        cd ..

        # buffer for starting the github action
        sleep 30

        # waiting for complete of the github action
        cd ${CLUSTER_ID}
        gh run list --workflow GenerateYaml --limit 1
        gh run watch $(gh run list --workflow GenerateYaml --limit 1| grep $CLUSTER_ID | awk -F push '{print $2}' | awk '{print $1}')

      envFrom:
        - secretRef:
            name: "github-tks-mgmt-token"
      env:
      - name: CONTRACT_ID
        value: "{{workflow.parameters.contract_id}}"
      - name: CLUSTER_ID
        value: "{{workflow.parameters.cluster_id}}"
      - name: TEMPLATE_NAME
        value: "{{workflow.parameters.test_template_name}}"
      - name: CLUSTER_INFO
        value: "{{inputs.parameters.cluster_info}}"
      volumeMounts:
        - name: out
          mountPath: /mnt/out
    volumes:
      - name: out
        emptyDir: { }
    outputs:
      parameters:
      - name: infra_provider
        valueFrom:
          default: "Something wrong"
          path: /mnt/out/infra_provider.txt

  - name: createRepoCredential
    activeDeadlineSeconds: 120
    container:
      name: 'createCredential'
      image: docker.io/sktcloud/argocd-cli:v2.2.5
      imagePullPolicy: IfNotPresent
      command:
      - /bin/bash
      - -ecx
      - |
        echo "===== Connect github repo ${USERNAME}/${CLUSTER_ID}-manifests with token ====="
        # log into Argo CD server
        ./argocd login $ARGO_SERVER --plaintext --insecure --username $ARGO_USERNAME \
        --password $ARGO_PASSWORD

        ./argocd repo add https://github.com/${USERNAME}/${CLUSTER_ID}-manifests --username ${USERNAME} --password ${TOKEN}
      envFrom:
        - secretRef:
            name: "github-tks-mgmt-token"
        - secretRef:
            name: "decapod-argocd-config"
      env:
        - name: CLUSTER_ID
          value: "{{workflow.parameters.cluster_id}}"

  - name: main
    inputs:
      parameters:
      - name: cluster_info
    steps:
      - - name: createClusterRepo
          template: createClusterRepo
          arguments:
            parameters:
            - name: cluster_info
              value: "{{inputs.parameters.cluster_info}}"

      - - name: createRepoCredential
          template: createRepoCredential
          arguments: {}

    outputs:
      parameters:
      - name: infra_provider
        valueFrom:
          parameter: "{{steps.createClusterRepo.outputs.parameters.infra_provider}}"
