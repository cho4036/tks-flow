apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: tks-create-application
  namespace: argo
spec:
  arguments:
    parameters:
    - name: cluster_id
      value: "hanu-deploy-apps"
    - name: contract_id
      value: ""
    - name: git_account
      value: ""
    - name: tks_admin
      value: ""
    - name: app_group
      value: "lma"
    - name: revision
      value: "main"
  templates:
  - name: createApp
    inputs:
      parameters:
      - name: path
      - name: namespace
      - name: target_cluster
    activeDeadlineSeconds: 900
    container:
      image: ghcr.io/openinfradev/argocd-cli:v2.0.1
      command:
      - /bin/bash
      - -c
      - |
        #CD_APP=$PATH
        #NAMESPACE=$SITE_NAME
        CD_APP=${SITE_NAME:0:8}-$PATH
        echo "argo-cd application name: $CD_APP"

        # log into Argo CD server
        ./argocd login $ARGO_SERVER --plaintext --insecure --username $ARGO_USERNAME \
        --password $ARGO_PASSWORD

        REPO=https://$(echo $gittoken|xargs)@github.com/$git_account/${contract_id}-manifests.git

        # check if app already exists.
        ./argocd app get $CD_APP 
        if [[ $? -ne 0 ]]; then
          echo "$CD_APP application is not in server"
          # create new application if not exists.
          echo ./argocd app create $CD_APP --repo $REPO --revision $REVISION --path $SITE_NAME/$APP_GROUP/$PATH --dest-namespace $NAMESPACE --dest-name $TARGET_CLUSTER --project $APP_GROUP --label app=$APP_GROUP --directory-recurse
          ./argocd app create $CD_APP --repo $REPO --revision $REVISION \
            --path $SITE_NAME/$APP_GROUP/$PATH \
            --dest-namespace $NAMESPACE --dest-name $TARGET_CLUSTER \
            --project $APP_GROUP --label app=$APP_GROUP --directory-recurse

          if [[ $? -ne 0 ]]; then
            exit $?
          fi
        fi

        ./argocd app set $CD_APP --sync-policy automated --auto-prune
        ./argocd app sync $CD_APP --async
        ./argocd app wait $CD_APP --health
      envFrom:
        - secretRef:
            name: "decapod-argocd-config"
        - secretRef:
            name: "gittoken"
      env:
        - name: PATH
          value: "{{inputs.parameters.path}}"
        - name: SITE_NAME
          value: "{{workflow.parameters.cluster_id}}"
        - name: TARGET_CLUSTER
          value: "{{inputs.parameters.target_cluster}}"
        - name: APP_GROUP
          value: "{{workflow.parameters.app_group}}"
        - name: NAMESPACE
          value: "{{inputs.parameters.namespace}}"
        - name: REVISION
          value: "{{workflow.parameters.revision}}"
        - name: contract_id
          value: "{{workflow.parameters.contract_id}}"
        - name: cluster_id
          value: "{{workflow.parameters.cluster_id}}"
        - name: git_account
          value: "{{workflow.parameters.git_account}}"


  - name: installApps
    inputs:
      parameters:
      - name: list
    steps:
    - - name: "InstallApps"
        template: createApp
        arguments:
          parameters:
          - {name: path, value: "{{item.path}}"}
          - {name: namespace, value: "{{item.namespace}}"}
          - {name: target_cluster, value: "{{workflow.parameters.cluster_id}}"}
        withParam: "{{inputs.parameters.list}}"

  - name: installAppsOnAdmin
    inputs:
      parameters:
      - name: list
    steps:
    - - name: "InstallAppsOnAdmin"
        template: createApp
        arguments:
          parameters:
          - {name: path, value: "{{item.path}}"}
          - {name: namespace, value: "{{item.namespace}}"}
          - {name: target_cluster, value: "{{workflow.parameters.tks_admin}}"}
        withParam: "{{inputs.parameters.list}}"
