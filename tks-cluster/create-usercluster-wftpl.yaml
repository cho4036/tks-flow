apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: create-tks-usercluster
  namespace: argo
spec:
  entrypoint: deploy
  arguments:
    parameters:
    - name: contract_id
      value: "0010010a-d6cb-459b-9148-1b02ac545753"
    - name: cluster_id
      value: "011b88fa-4d53-439f-9336-67845f994051"
    - name: site_name
      value: "{{ workflow.parameters.cluster_id }}"
    - name: template_name
      value: "template-std"
    - name: git_account
      value: "tks-management"
    # TODO: if gittoken is necessary, the following options might be tried.
    # 1. Pass gittoken name (or use predefined name) and createApp reconstructs this repo URL.
    # 2. Make argocd pod always use the common gittoken.
    - name: manifest_repo_url
      value: ""
    - name: revision
      value: "main"
    - name: app_prefix
      value: "{{=sprig.substr(0, 8, workflow.parameters.cluster_id)}}"
    - name: tks_info_host
      value: "tks-info.tks.svc"

  volumes:
  - name: config
    secret:
      secretName: tks-admin-kubeconfig-secret
  - name: artifacts
    configMap:
      name: aws-artifacts
      defaultMode: 0555
  - name: tks-proto-vol
    configMap:
      name: tks-proto

  templates:
  - name: deploy
    steps:
    - - name: tks-create-cluster-repo
        templateRef:
          name: tks-create-cluster-repo
          template: main

    - - name: k8s-by-capi
        templateRef:
          name: create-application
          template: installApps
        arguments:
          parameters: 
          - name: list
            value: |
              [
                { 
                  "app_group": "tks-cluster-aws",
                  "path": "cluster-api-aws",
                  "namespace": "argo",
                  "target_cluster": "tks-admin"
                }
              ]

    - - name: wait-for-clster-to-be-registered
        template: wait-for-cluster-registration

    - - name: install-cni-and-csi
        templateRef:
          name: create-application
          template: installApps
        arguments:
          parameters: 
          - name: list
            value: |
              [
                { 
                  "app_group": "tks-cluster-aws",
                  "path": "kubernetes-addons",
                  "namespace": "taco-system",
                  "target_cluster": ""
                },
                {
                  "app_group": "tks-cluster-aws",
                  "path": "aws-ebs-csi-driver",
                  "namespace": "kube-system",
                  "target_cluster": ""
                }
              ]

    - - name: update-cluster-status-to-running
        templateRef:
          name: update-tks-cluster-status
          template: updateClusterStatus
        arguments:
          parameters:
          - name: cluster_status
            value: RUNNING

  - name: wait-for-cluster-registration
    activeDeadlineSeconds: 1800
    container:
      image: docker.io/sktcloud/argocd-cli:v2.2.5 
      command:
      - /bin/bash
      - -exc
      - |
        yes | ./argocd login --insecure $ARGO_SERVER --username $ARGO_USERNAME --password $ARGO_PASSWORD

        while [ $(./argocd cluster list | grep \ $target\ | wc -l ) == 0 ]; do
            echo "> Wait for cluster to be registered"
            sleep 1
        done
      envFrom:
      - secretRef:
          name: "decapod-argocd-config"
      env:
      - name: target
        value: "{{workflow.parameters.cluster_id}}"
